from elgas import parameters
from elgas.application import ReadDeviceParametersResponse


def test_parameter_0():
    response = ReadDeviceParametersResponse(
        data=bytearray(
            b"\x0e\x01\x00\x83]!\xffs1.16\x00\x10\x02211137_000000001\x00\x0cF\x13\x1e\x10\x0ef\xa6\xcaB\x00\x00\x00\x00\x02\xcd\xcc\x8c?\xb3\x0cA?5\xde.B\n\xd7#?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x03\x18\xc4B\x8a\x1fC?\xd5\t\x88>\x84\x9eM=\xac\x8b[=\xc6\xdc5<\x00o\x01<\n\xd7#<\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00X\x00\x0e\x00H\x004\x00\x98\x02X\x00\x00\x00\x03\x00\x00\x08\x00\x02\x03\x03\x00\x08\x03\x00\x06h\xa6\xcaB\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00*\x00\x07bar\x00\x00\x00\x00\x00 \xb0C\x00\x00\x00\x00\x00\x00\xa1m\x00\x00\x00\x00\x00\x00\x00\x90MJ/m3\x003\x00\x01\x01\x00\x00\x00\x00\x00A\x005\xe0\xff\x7f\xffw\xee\x12\x00\x00\x00\x00\x00\x00\x00\x00\x001.16\x00\x9a\xfa\x00\x00\x00\x00\xe5!\x00\x00K\x00\x1e\x00\x00\x01\x00\x06\x00\n\x00\x9bPressure p\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00bar\x00\x00\x00\x00\x00\x9a\x00\x9a:\x00\x00\x00\x00\xcd\xccL?\x00\x00\x8cBNy\x87d\x9e\x02Z\x00\x00\x00\n\x00\x00\x00\x00\x00K\x00\x1e\x01\x00\x02\x00\x08\x00\x0c\x00\x9bTemperature t\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xb0C\x00\x00\x00\x00\x00\x00\x96\x00\x16;\x00\x00H\xc2\x00\x00\xc8\xc1\x00\x00pB\xadTad\xa2\x02\\\x00\x00\x00\x0c\x00\x00\x00\x00\x00K\x00\x1e\x02\x00\x15\x00\n\x00\x0e\x00\x89Internal temp. A3\x00\x00\x00\x00\x00\x00\xb0C\x00\x00\x00\x00\x00\x00\x00\x00\x00>\x00\x00\x00\xc3\x00\x00 \xc2\x00\x00\xaaB\x00\x00\x00\x00\x9c\x02\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00K\x00\x1e\x03\x00\x16\x00\x0c\x00\x10\x00\x89Battery voltage A4\x00\x00\x00\x00\x00V\x00\x00\x00\x00\x00\x00\x00h\xe8\x9f;\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x90@\x00\x00\x00\x00\x9c\x02\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00K\x00\x1e\x04\x00\x17\x00\x0e\x00\x12\x00\x81Battery capacity A5\x00\x00\x00\x00%\x00\x00\x00\x00\x00\x00\x00\xc8\x00\xc8:\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc8B\x00\x00\x00\x00\x9c\x02\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00K\x00\x1e\x05\x00\x1a\x00\x10\x00\x14\x00\x81GSM signal A6\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00%\x00\x00\x00\x00\x00\x00\x00\xc8\x00\xc8:\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc8B\x00\x00\x00\x00\x9c\x02\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00F\x00\x1f\x00\x00\xa0\x00\x90\x02\x00\x00P\x00\x81Cover B1\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x9c\x02\x00\x00\x00\x00\x00      Closed\x00      Opened\x00K\x000\x01\x00\x1e\x00\x91\x02\x00\x00Q\x00QCall window B2\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01!\x00\xb8V\x00\x00\x00\x00\x00\x00\x04     no call\x00      active\x00K\x000\x02\x00\x1f\x00\x92\x02\x00\x00R\x00IService window B3\x00\x00\x00\x00\x00\x00\x01A\x00\x00\x00\x00\x00\x08Q\x01\x00\x00  no service\x00      active\x00F\x00\x1f\x03\x00\x1c\x00\x93\x02\x00\x00S\x00\xc1Modem power supp B4\x00\x00\x00\x00\x9c\x02\x00\x00\x00\x00\x00         Off\x00          On\x00"
        ),
        object_number=0,
        object_amount=11,
        is_end=False,
    )
    object_length = int.from_bytes(response.data[:2], "little")
    object_id = response.data[2]
    assert object_length == 270
    assert object_id == 0

    object_data = response.data[3:270]
    print(object_data)
    assert len(object_data) == 270 - 3

    system_parameters = parameters.SystemParameters.from_bytes(object_data)

    print(system_parameters)

    assert False
